/**
 *
 * $Id$
 */
package lintra.atlcompiler.javagen.validation;

import lintra.atlcompiler.javagen.JParameter;
import lintra.atlcompiler.javagen.JTypeRef;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link lintra.atlcompiler.javagen.JMethod}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface JMethodValidator {
	boolean validate();

	boolean validateName(String value);
	boolean validateParameters(EList<JParameter> value);
	boolean validateReturnType(JTypeRef value);

	boolean validateThrows_(EList<JTypeRef> value);
}
